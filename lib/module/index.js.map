{"version":3,"names":["requireNativeComponent","NativeModules","React","PropTypes","PlayerEvents","AdEvents","AnalyticsEvents","PLAYER_TYPE","MEDIA_FORMAT","MEDIA_ENTRY_TYPE","DRM_SCHEME","PLAYER_PLUGIN","PLAYER_RESIZE_MODES","WAKEMODE","SUBTITLE_STYLE","SUBTITLE_PREFERENCE","VIDEO_CODEC","AUDIO_CODEC","VR_INTERACTION_MODE","RNKalturaPlayer","KalturaPlayerModule","KalturaPlayer","Component","nativeProps","nativeComponentRef","setNativeProps","options","isPlayerCreated","id","console","error","log","setUpPlayer","playerCreated","asset","load","addKalturaPlayerListeners","removeKalturaPlayerListeners","onApplicationPaused","onApplicationResumed","pluginName","config","pluginJson","pluginConfig","stringifiedJson","JSON","stringify","updatePluginConfigs","play","pause","stop","destroy","replay","position","seekTo","trackId","changeTrack","rate","changePlaybackRate","vol","setVolume","isAutoPlay","setAutoplay","KS","setKS","seekToLiveDefaultPosition","subtitleStyle","updateSubtitleStyle","mode","updateResizeMode","abrSettings","updateAbrSettings","resetAbrSettings","lowLatencyConfig","updateLlConfig","resetLlConfig","componentDidMount","componentWillUnmount","render","props","nativeRef","propTypes","style","object"],"sources":["index.tsx"],"sourcesContent":["import { requireNativeComponent, NativeModules, ViewStyle } from 'react-native';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { PlayerEvents } from './events/PlayerEvents';\nimport { AdEvents } from './events/AdEvents';\nimport { AnalyticsEvents } from './events/AnalyticsEvents';\nimport {\n  PLAYER_TYPE,\n  MEDIA_FORMAT,\n  MEDIA_ENTRY_TYPE,\n  DRM_SCHEME,\n  PLAYER_PLUGIN,\n  PLAYER_RESIZE_MODES,\n  WAKEMODE,\n  SUBTITLE_STYLE,\n  SUBTITLE_PREFERENCE,\n  VIDEO_CODEC,\n  AUDIO_CODEC,\n  VR_INTERACTION_MODE,\n} from './consts';\n\nconst RNKalturaPlayer = requireNativeComponent('KalturaPlayerView');\nconst { KalturaPlayerModule } = NativeModules;\n\ninterface KalturaPlayerProps {\n  style: ViewStyle;\n  playerType: PLAYER_TYPE;\n}\n\nexport {\n  PlayerEvents,\n  AdEvents,\n  AnalyticsEvents,\n  PLAYER_TYPE,\n  MEDIA_FORMAT,\n  MEDIA_ENTRY_TYPE,\n  DRM_SCHEME,\n  PLAYER_PLUGIN,\n  PLAYER_RESIZE_MODES,\n  WAKEMODE,\n  SUBTITLE_STYLE,\n  SUBTITLE_PREFERENCE,\n  VIDEO_CODEC,\n  AUDIO_CODEC,\n  VR_INTERACTION_MODE,\n};\n\nexport class KalturaPlayer extends React.Component<KalturaPlayerProps> {\n  nativeComponentRef: any;\n  eventListener: any;\n  playerType: PLAYER_TYPE | undefined;\n\n  static propTypes: {\n    style: object;\n  };\n\n  componentDidMount() {\n    console.log('componentDidMount from Library.');\n  }\n\n  componentWillUnmount() {\n    console.log('componentWillUnmount from Library');\n  }\n\n  setNativeProps = (nativeProps: any) => {\n    this.nativeComponentRef.setNativeProps(nativeProps);\n  };\n\n  /**\n   * This method creates a Player instance internally (Basic, OVP/OTT Player)\n   * With this, it take the PlayerInitOptions which are having essential Player settings values\n   *\n   * @param options PlayerInitOptions JSON String\n   * @param id PartnerId (Don't pass this parameter for BasicPlayer. For OVP/OTT player this value\n   * should be always greater than 0 and should be valid otherwise, we will not be able to featch the details\n   * for the mediaId or the entryId)\n   */\n  setup = (options: string, isPlayerCreated: Function, id: number = 0) => {\n    if (!options) {\n      console.error(`setup, invalid options = ${options}`);\n      return;\n    }\n    console.log('Setting up the Player');\n    KalturaPlayerModule.setUpPlayer(id, options, (playerCreated: Boolean) => {\n      isPlayerCreated(playerCreated);\n    });\n  };\n\n  /**\n   * Load the media with the given\n   *\n   * assetId OR mediaId OR entryID for OVP/OTT Kaltura Player\n   *\n   * playbackURL for Basic Kaltura Player\n   *\n   * @param id Playback URL for Kaltura Basic Player OR\n   * MediaId for Kaltura OTT Player OR\n   * EntryId for Kaltura OVP Player\n   * @param asset Media Asset JSON String\n   */\n  loadMedia = (id: string, asset: string) => {\n    if (!id || !asset) {\n      console.error(`loadMedia, invalid id = ${id} or asset = ${asset}`);\n      return;\n    }\n\n    console.log(\n      `Loading the media. assetId is: ${id} and media asset is: ${asset}`\n    );\n\n    KalturaPlayerModule.load(id, asset);\n  };\n\n  /**\n   * Add the listners for the Kaltura Player\n   */\n  addListeners = () => {\n    console.log('Calling Native Prop addListeners()');\n    KalturaPlayerModule.addKalturaPlayerListeners();\n  };\n\n  /**\n   * Add the listners for the Kaltura Player\n   */\n  removeListeners = () => {\n    console.log('Calling Native Prop removeListeners()');\n    KalturaPlayerModule.removeKalturaPlayerListeners();\n  };\n\n  /**\n   * Should be called when the application is in background\n   */\n  onApplicationPaused = () => {\n    console.log('Calling Native Prop onApplicationPaused()');\n    KalturaPlayerModule.onApplicationPaused();\n  };\n\n  /**\n   * Should be called when the application comes back to\n   * foreground\n   */\n  onApplicationResumed = () => {\n    console.log('Calling Native Prop onApplicationResumed()');\n    KalturaPlayerModule.onApplicationResumed();\n  };\n\n  /**\n   * Update a Plugin Config\n   *\n   * @param pluginName Plugin Name (Youbora, IMA etc)\n   * @param config Updated Plugin Config (YouboraConfig JSON, IMAConfig JSON etc)\n   */\n  updatePluginConfig = (pluginName: PLAYER_PLUGIN, config: object) => {\n    if (pluginName == null || !config) {\n      console.error(\n        `updatePluginConfig, either pluginName ${pluginName} OR config is invalid: ${config}`\n      );\n      return;\n    }\n\n    const pluginJson = {\n      pluginName: pluginName,\n      pluginConfig: config,\n    };\n    const stringifiedJson = JSON.stringify(pluginJson);\n    console.log(`Updated Plugin is: ${stringifiedJson}`);\n\n    KalturaPlayerModule.updatePluginConfigs(stringifiedJson);\n  };\n\n  /**\n   * Play the player if it is not playing\n   */\n  play = () => {\n    console.log('Calling Native Prop play()');\n    KalturaPlayerModule.play();\n  };\n\n  /**\n   * Pause the player if it is playing\n   */\n  pause = () => {\n    console.log('Calling Native Prop pause()');\n    KalturaPlayerModule.pause();\n  };\n\n  /**\n   * Stops the player to the initial state\n   */\n  stop = () => {\n    console.log('Calling Native Prop stop()');\n    KalturaPlayerModule.stop();\n  };\n\n  /**\n   * Destroy the Kaltura Player instance\n   */\n  destroy = () => {\n    console.log('Calling Native Prop destroy()');\n    KalturaPlayerModule.destroy();\n  };\n\n  /**\n   * Replays the media from the beginning\n   */\n  replay = () => {\n    console.log('Calling Native Prop replay()');\n    KalturaPlayerModule.replay();\n  };\n\n  /**\n   * Seek the player to the specified position\n   * @param position in miliseconds (Ms)\n   */\n  seekTo = (position: number) => {\n    console.log(`Calling Native Prop seekTo() position is: ${position}`);\n    KalturaPlayerModule.seekTo(position);\n  };\n\n  /**\n   * Change a specific track (Video, Audio or Text track)\n   * @param trackId Unique track ID which was sent in `tracksAvailable` event\n   */\n  changeTrack = (trackId: string) => {\n    if (!trackId) {\n      console.error(`trackId is invalid which is: ${trackId}`);\n      return;\n    }\n    console.log('Calling Native Prop changeTrack()');\n    KalturaPlayerModule.changeTrack(trackId);\n  };\n\n  /**\n   * Change the playback rate (ff or slow motion). Default is 1.0f\n   * @param rate Desired playback rate (Ex: 0.5f, 1.5f 2.0f etc)\n   */\n  setPlaybackRate = (rate: number) => {\n    console.log(`Calling Native Prop setPlaybackRate() rate is: ${rate}`);\n    KalturaPlayerModule.changePlaybackRate(rate);\n  };\n\n  /**\n   * Change the volume of the current audio track.\n   * Accept values between 0.0 and 1.0. Where 0.0 is mute and 1.0 is maximum volume.\n   * If the volume parameter is higher then 1.0, it will be converted to 1.0.\n   * If the volume parameter is lower then 0.0, it be converted to 0.0.\n   *\n   * @param vol - volume to set.\n   */\n  setVolume = (vol: number) => {\n    console.log('Calling Native Prop setVolume()');\n    KalturaPlayerModule.setVolume(vol);\n  };\n\n  /**\n   * Set the media to play automatically at the start (load)\n   * if false, user will have to click on UI play button\n   *\n   * @param isAutoPlay media should be autoplayed at the start or not\n   */\n  setAutoPlay = (isAutoPlay: boolean) => {\n    console.log('Calling Native Prop setAutoPlay()');\n    KalturaPlayerModule.setAutoplay(isAutoPlay);\n  };\n\n  /**\n   * Set the KS for the media (only for OVP/OTT users)\n   * Call this before calling {@link loadMedia}\n   * @param KS Kaltura Secret key\n   */\n  setKS = (KS: string) => {\n    if (!KS) {\n      console.error('KS is invalid which is: ' + KS);\n      return;\n    }\n    console.log('Calling Native Prop setKS()');\n    KalturaPlayerModule.setKS(KS);\n  };\n\n  /**\n   * NOOP\n   * @param index\n   */\n  //setZIndex = (index: number) => {\n  //  console.log('Calling Native Prop setZIndex()');\n  //};\n\n  /**\n   * Only for Live Media.\n   * Seek player to Live Default Position.\n   */\n  seekToLiveDefaultPosition = () => {\n    console.log('Calling Native Prop seekToLiveDefaultPosition()');\n    KalturaPlayerModule.seekToLiveDefaultPosition();\n  };\n\n  /**\n   * Update the existing subtitle styling\n   */\n  updateSubtitleStyle = (subtitleStyle: string) => {\n    if (!subtitleStyle) {\n      console.error(`subtitleStyle is invalid which is: ${subtitleStyle}`);\n      return;\n    }\n    console.log('Calling Native Prop updateSubtitleStyle()');\n    KalturaPlayerModule.updateSubtitleStyle(subtitleStyle);\n  };\n\n  /**\n   * Update the Resize Mode\n   */\n  updateResizeMode = (mode: PLAYER_RESIZE_MODES) => {\n    console.log('Calling Native Prop updateSurfaceAspectRatioResizeMode()');\n    KalturaPlayerModule.updateResizeMode(mode);\n  };\n\n  /**\n   * Update the ABR Settings\n   */\n  updateAbrSettings = (abrSettings: string) => {\n    if (!abrSettings) {\n      console.error(`abrSettings is invalid which is: ${abrSettings}`);\n      return;\n    }\n    console.log('Calling Native Prop updateABRSettings()');\n    KalturaPlayerModule.updateAbrSettings(abrSettings);\n  };\n\n  /**\n   * Reset the ABR Settings\n   */\n  resetAbrSettings = () => {\n    console.log('Calling Native Prop resetABRSettings()');\n    KalturaPlayerModule.resetAbrSettings();\n  };\n\n  /**\n   * Update the Low Latency Config\n   * Only for Live Media\n   */\n  updateLowLatencyConfig = (lowLatencyConfig: string) => {\n    if (!lowLatencyConfig) {\n      console.error(\n        `lowLatencyConfig is invalid which is: ${lowLatencyConfig}`\n      );\n      return;\n    }\n    console.log('Calling Native Prop updateLowLatencyConfig()');\n    KalturaPlayerModule.updateLlConfig(lowLatencyConfig);\n  };\n\n  /**\n   * Reset the Low Latency Config\n   * Only for Live Media\n   */\n  resetLowLatencyConfig = () => {\n    console.log('Calling Native Prop resetLowLatencyConfig()');\n    KalturaPlayerModule.resetLlConfig();\n  };\n\n  render() {\n    return (\n      <RNKalturaPlayer\n        {...this.props}\n        ref={(nativeRef) => (this.nativeComponentRef = nativeRef)}\n      />\n    );\n  }\n}\n\nKalturaPlayer.propTypes = {\n  style: PropTypes.object,\n};\n"],"mappings":";;;;AAAA,SAASA,sBAAT,EAAiCC,aAAjC,QAAiE,cAAjE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,YAAT,QAA6B,uBAA7B;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,eAAT,QAAgC,0BAAhC;AACA,SACEC,WADF,EAEEC,YAFF,EAGEC,gBAHF,EAIEC,UAJF,EAKEC,aALF,EAMEC,mBANF,EAOEC,QAPF,EAQEC,cARF,EASEC,mBATF,EAUEC,WAVF,EAWEC,WAXF,EAYEC,mBAZF,QAaO,UAbP;AAeA,MAAMC,eAAe,GAAGnB,sBAAsB,CAAC,mBAAD,CAA9C;AACA,MAAM;EAAEoB;AAAF,IAA0BnB,aAAhC;AAOA,SACEG,YADF,EAEEC,QAFF,EAGEC,eAHF,EAIEC,WAJF,EAKEC,YALF,EAMEC,gBANF,EAOEC,UAPF,EAQEC,aARF,EASEC,mBATF,EAUEC,QAVF,EAWEC,cAXF,EAYEC,mBAZF,EAaEC,WAbF,EAcEC,WAdF,EAeEC,mBAfF;AAkBA,OAAO,MAAMG,aAAN,SAA4BnB,KAAK,CAACoB,SAAlC,CAAgE;EAAA;IAAA;;IAAA;;IAAA;;IAAA;;IAAA,wCAiBnDC,WAAD,IAAsB;MACrC,KAAKC,kBAAL,CAAwBC,cAAxB,CAAuCF,WAAvC;IACD,CAnBoE;;IAAA,+BA8B7D,UAACG,OAAD,EAAkBC,eAAlB,EAAgE;MAAA,IAAnBC,EAAmB,uEAAN,CAAM;;MACtE,IAAI,CAACF,OAAL,EAAc;QACZG,OAAO,CAACC,KAAR,CAAe,4BAA2BJ,OAAQ,EAAlD;QACA;MACD;;MACDG,OAAO,CAACE,GAAR,CAAY,uBAAZ;MACAX,mBAAmB,CAACY,WAApB,CAAgCJ,EAAhC,EAAoCF,OAApC,EAA8CO,aAAD,IAA4B;QACvEN,eAAe,CAACM,aAAD,CAAf;MACD,CAFD;IAGD,CAvCoE;;IAAA,mCAqDzD,CAACL,EAAD,EAAaM,KAAb,KAA+B;MACzC,IAAI,CAACN,EAAD,IAAO,CAACM,KAAZ,EAAmB;QACjBL,OAAO,CAACC,KAAR,CAAe,2BAA0BF,EAAG,eAAcM,KAAM,EAAhE;QACA;MACD;;MAEDL,OAAO,CAACE,GAAR,CACG,kCAAiCH,EAAG,wBAAuBM,KAAM,EADpE;MAIAd,mBAAmB,CAACe,IAApB,CAAyBP,EAAzB,EAA6BM,KAA7B;IACD,CAhEoE;;IAAA,sCAqEtD,MAAM;MACnBL,OAAO,CAACE,GAAR,CAAY,oCAAZ;MACAX,mBAAmB,CAACgB,yBAApB;IACD,CAxEoE;;IAAA,yCA6EnD,MAAM;MACtBP,OAAO,CAACE,GAAR,CAAY,uCAAZ;MACAX,mBAAmB,CAACiB,4BAApB;IACD,CAhFoE;;IAAA,6CAqF/C,MAAM;MAC1BR,OAAO,CAACE,GAAR,CAAY,2CAAZ;MACAX,mBAAmB,CAACkB,mBAApB;IACD,CAxFoE;;IAAA,8CA8F9C,MAAM;MAC3BT,OAAO,CAACE,GAAR,CAAY,4CAAZ;MACAX,mBAAmB,CAACmB,oBAApB;IACD,CAjGoE;;IAAA,4CAyGhD,CAACC,UAAD,EAA4BC,MAA5B,KAA+C;MAClE,IAAID,UAAU,IAAI,IAAd,IAAsB,CAACC,MAA3B,EAAmC;QACjCZ,OAAO,CAACC,KAAR,CACG,yCAAwCU,UAAW,0BAAyBC,MAAO,EADtF;QAGA;MACD;;MAED,MAAMC,UAAU,GAAG;QACjBF,UAAU,EAAEA,UADK;QAEjBG,YAAY,EAAEF;MAFG,CAAnB;MAIA,MAAMG,eAAe,GAAGC,IAAI,CAACC,SAAL,CAAeJ,UAAf,CAAxB;MACAb,OAAO,CAACE,GAAR,CAAa,sBAAqBa,eAAgB,EAAlD;MAEAxB,mBAAmB,CAAC2B,mBAApB,CAAwCH,eAAxC;IACD,CAzHoE;;IAAA,8BA8H9D,MAAM;MACXf,OAAO,CAACE,GAAR,CAAY,4BAAZ;MACAX,mBAAmB,CAAC4B,IAApB;IACD,CAjIoE;;IAAA,+BAsI7D,MAAM;MACZnB,OAAO,CAACE,GAAR,CAAY,6BAAZ;MACAX,mBAAmB,CAAC6B,KAApB;IACD,CAzIoE;;IAAA,8BA8I9D,MAAM;MACXpB,OAAO,CAACE,GAAR,CAAY,4BAAZ;MACAX,mBAAmB,CAAC8B,IAApB;IACD,CAjJoE;;IAAA,iCAsJ3D,MAAM;MACdrB,OAAO,CAACE,GAAR,CAAY,+BAAZ;MACAX,mBAAmB,CAAC+B,OAApB;IACD,CAzJoE;;IAAA,gCA8J5D,MAAM;MACbtB,OAAO,CAACE,GAAR,CAAY,8BAAZ;MACAX,mBAAmB,CAACgC,MAApB;IACD,CAjKoE;;IAAA,gCAuK3DC,QAAD,IAAsB;MAC7BxB,OAAO,CAACE,GAAR,CAAa,6CAA4CsB,QAAS,EAAlE;MACAjC,mBAAmB,CAACkC,MAApB,CAA2BD,QAA3B;IACD,CA1KoE;;IAAA,qCAgLtDE,OAAD,IAAqB;MACjC,IAAI,CAACA,OAAL,EAAc;QACZ1B,OAAO,CAACC,KAAR,CAAe,gCAA+ByB,OAAQ,EAAtD;QACA;MACD;;MACD1B,OAAO,CAACE,GAAR,CAAY,mCAAZ;MACAX,mBAAmB,CAACoC,WAApB,CAAgCD,OAAhC;IACD,CAvLoE;;IAAA,yCA6LlDE,IAAD,IAAkB;MAClC5B,OAAO,CAACE,GAAR,CAAa,kDAAiD0B,IAAK,EAAnE;MACArC,mBAAmB,CAACsC,kBAApB,CAAuCD,IAAvC;IACD,CAhMoE;;IAAA,mCA0MxDE,GAAD,IAAiB;MAC3B9B,OAAO,CAACE,GAAR,CAAY,iCAAZ;MACAX,mBAAmB,CAACwC,SAApB,CAA8BD,GAA9B;IACD,CA7MoE;;IAAA,qCAqNtDE,UAAD,IAAyB;MACrChC,OAAO,CAACE,GAAR,CAAY,mCAAZ;MACAX,mBAAmB,CAAC0C,WAApB,CAAgCD,UAAhC;IACD,CAxNoE;;IAAA,+BA+N5DE,EAAD,IAAgB;MACtB,IAAI,CAACA,EAAL,EAAS;QACPlC,OAAO,CAACC,KAAR,CAAc,6BAA6BiC,EAA3C;QACA;MACD;;MACDlC,OAAO,CAACE,GAAR,CAAY,6BAAZ;MACAX,mBAAmB,CAAC4C,KAApB,CAA0BD,EAA1B;IACD,CAtOoE;;IAAA,mDAoPzC,MAAM;MAChClC,OAAO,CAACE,GAAR,CAAY,iDAAZ;MACAX,mBAAmB,CAAC6C,yBAApB;IACD,CAvPoE;;IAAA,6CA4P9CC,aAAD,IAA2B;MAC/C,IAAI,CAACA,aAAL,EAAoB;QAClBrC,OAAO,CAACC,KAAR,CAAe,sCAAqCoC,aAAc,EAAlE;QACA;MACD;;MACDrC,OAAO,CAACE,GAAR,CAAY,2CAAZ;MACAX,mBAAmB,CAAC+C,mBAApB,CAAwCD,aAAxC;IACD,CAnQoE;;IAAA,0CAwQjDE,IAAD,IAA+B;MAChDvC,OAAO,CAACE,GAAR,CAAY,0DAAZ;MACAX,mBAAmB,CAACiD,gBAApB,CAAqCD,IAArC;IACD,CA3QoE;;IAAA,2CAgRhDE,WAAD,IAAyB;MAC3C,IAAI,CAACA,WAAL,EAAkB;QAChBzC,OAAO,CAACC,KAAR,CAAe,oCAAmCwC,WAAY,EAA9D;QACA;MACD;;MACDzC,OAAO,CAACE,GAAR,CAAY,yCAAZ;MACAX,mBAAmB,CAACmD,iBAApB,CAAsCD,WAAtC;IACD,CAvRoE;;IAAA,0CA4RlD,MAAM;MACvBzC,OAAO,CAACE,GAAR,CAAY,wCAAZ;MACAX,mBAAmB,CAACoD,gBAApB;IACD,CA/RoE;;IAAA,gDAqS3CC,gBAAD,IAA8B;MACrD,IAAI,CAACA,gBAAL,EAAuB;QACrB5C,OAAO,CAACC,KAAR,CACG,yCAAwC2C,gBAAiB,EAD5D;QAGA;MACD;;MACD5C,OAAO,CAACE,GAAR,CAAY,8CAAZ;MACAX,mBAAmB,CAACsD,cAApB,CAAmCD,gBAAnC;IACD,CA9SoE;;IAAA,+CAoT7C,MAAM;MAC5B5C,OAAO,CAACE,GAAR,CAAY,6CAAZ;MACAX,mBAAmB,CAACuD,aAApB;IACD,CAvToE;EAAA;;EASrEC,iBAAiB,GAAG;IAClB/C,OAAO,CAACE,GAAR,CAAY,iCAAZ;EACD;;EAED8C,oBAAoB,GAAG;IACrBhD,OAAO,CAACE,GAAR,CAAY,mCAAZ;EACD;;EA0SD+C,MAAM,GAAG;IACP,oBACE,oBAAC,eAAD,eACM,KAAKC,KADX;MAEE,GAAG,EAAGC,SAAD,IAAgB,KAAKxD,kBAAL,GAA0BwD;IAFjD,GADF;EAMD;;AAhUoE;;gBAA1D3D,a;;AAmUbA,aAAa,CAAC4D,SAAd,GAA0B;EACxBC,KAAK,EAAE/E,SAAS,CAACgF;AADO,CAA1B"}