{"version":3,"names":["requireNativeComponent","NativeModules","React","PropTypes","PlayerEvents","AdEvents","AnalyticsEvents","PLAYER_TYPE","MEDIA_FORMAT","MEDIA_ENTRY_TYPE","DRM_SCHEME","PLAYER_PLUGIN","PLAYER_RESIZE_MODES","WAKEMODE","SUBTITLE_STYLE","SUBTITLE_PREFERENCE","VIDEO_CODEC","AUDIO_CODEC","VR_INTERACTION_MODE","RNKalturaPlayer","KalturaPlayerModule","POSITION_UNSET","KalturaPlayer","Component","componentDidMount","console","log","componentWillUnmount","render","props","nativeRef","nativeComponentRef","propTypes","style","object","KalturaPlayerAPI","playerType","options","id","error","setupKalturaPlayer","asset","load","addKalturaPlayerListeners","removeKalturaPlayerListeners","onApplicationPaused","onApplicationResumed","pluginName","config","pluginJson","pluginConfig","stringifiedJson","JSON","stringify","updatePluginConfigs","play","pause","stop","destroy","replay","position","seekTo","trackId","changeTrack","rate","changePlaybackRate","vol","setVolume","isAutoPlay","setAutoplay","KS","setKS","seekToLiveDefaultPosition","subtitleStyle","updateSubtitleStyle","mode","updateResizeMode","abrSettings","updateAbrSettings","resetAbrSettings","lowLatencyConfig","updateLlConfig","resetLlConfig","getCurrentPosition","isPlaying","isLive","kalturaPlayerSetup","setUpPlayer","e","currentPosition","isPlayerPlaying","isPlayerLive"],"sources":["index.tsx"],"sourcesContent":["import { requireNativeComponent, NativeModules, ViewStyle } from 'react-native';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { PlayerEvents } from './events/PlayerEvents';\nimport { AdEvents } from './events/AdEvents';\nimport { AnalyticsEvents } from './events/AnalyticsEvents';\nimport {\n  PLAYER_TYPE,\n  MEDIA_FORMAT,\n  MEDIA_ENTRY_TYPE,\n  DRM_SCHEME,\n  PLAYER_PLUGIN,\n  PLAYER_RESIZE_MODES,\n  WAKEMODE,\n  SUBTITLE_STYLE,\n  SUBTITLE_PREFERENCE,\n  VIDEO_CODEC,\n  AUDIO_CODEC,\n  VR_INTERACTION_MODE,\n} from './consts';\n\nexport {\n  PlayerEvents,\n  AdEvents,\n  AnalyticsEvents,\n  PLAYER_TYPE,\n  MEDIA_FORMAT,\n  MEDIA_ENTRY_TYPE,\n  DRM_SCHEME,\n  PLAYER_PLUGIN,\n  PLAYER_RESIZE_MODES,\n  WAKEMODE,\n  SUBTITLE_STYLE,\n  SUBTITLE_PREFERENCE,\n  VIDEO_CODEC,\n  AUDIO_CODEC,\n  VR_INTERACTION_MODE,\n};\n\nconst RNKalturaPlayer = requireNativeComponent('KalturaPlayerView');\nconst { KalturaPlayerModule } = NativeModules;\n\nconst POSITION_UNSET: number = -1;\n\ninterface KalturaPlayerProps {\n  style: ViewStyle;\n  playerType: PLAYER_TYPE;\n}\n\nexport class KalturaPlayer extends React.Component<KalturaPlayerProps> {\n  nativeComponentRef: any;\n  playerType: PLAYER_TYPE | undefined;\n\n  static propTypes: {\n    style: object;\n  };\n\n  componentDidMount() {\n    console.log('componentDidMount from Library.');\n  }\n\n  componentWillUnmount() {\n    console.log('componentWillUnmount from Library');\n  }\n\n  render() {\n    return (\n      <RNKalturaPlayer\n        {...this.props}\n        ref={(nativeRef) => (this.nativeComponentRef = nativeRef)}\n      />\n    );\n  }\n}\n\nKalturaPlayer.propTypes = {\n  style: PropTypes.object,\n};\n\nexport class KalturaPlayerAPI {\n  /**\n   * This method creates a Player instance internally (Basic, OVP/OTT Player)\n   * With this, it take the PlayerInitOptions which are having essential Player settings values\n   *\n   * @param playerType The Player Type, Basic/OVP/OTT.\n   * @param options PlayerInitOptions JSON String.\n   * @param id PartnerId (Don't pass this parameter for BasicPlayer. For OVP/OTT player this value\n   * should be always greater than 0 and should be valid otherwise, we will not be able to featch the details\n   * for the mediaId or the entryId)\n   */\n  static setup = async (playerType: PLAYER_TYPE, options: string, id: number = 0) => {\n    if (playerType == null) {\n      console.error(`Invalid playerType = ${playerType}`);\n      return;\n    }\n\n    if (!options) {\n      console.error(`setup, invalid options = ${options}`);\n      return;\n    }\n    console.log('Setting up the Player');\n    return await setupKalturaPlayer(playerType, options, id);\n  };\n\n  /**\n   * Load the media with the given\n   *\n   * assetId OR mediaId OR entryID for OVP/OTT Kaltura Player\n   *\n   * playbackURL for Basic Kaltura Player\n   *\n   * @param id Playback URL for Kaltura Basic Player OR\n   * MediaId for Kaltura OTT Player OR\n   * EntryId for Kaltura OVP Player\n   * @param asset Media Asset JSON String\n   */\n  static loadMedia = (id: string, asset: string) => {\n    if (!id || !asset) {\n      console.error(`loadMedia, invalid id = ${id} or asset = ${asset}`);\n      return;\n    }\n\n    console.log(\n      `Loading the media. assetId is: ${id} and media asset is: ${asset}`\n    );\n\n    KalturaPlayerModule.load(id, asset);\n  };\n\n  /**\n   * Add the listners for the Kaltura Player\n   */\n  static addListeners = () => {\n    console.log('Calling Native Prop addListeners()');\n    KalturaPlayerModule.addKalturaPlayerListeners();\n  };\n\n  /**\n   * Add the listners for the Kaltura Player\n   */\n  static removeListeners = () => {\n    console.log('Calling Native Prop removeListeners()');\n    KalturaPlayerModule.removeKalturaPlayerListeners();\n  };\n\n  /**\n   * Should be called when the application is in background\n   */\n  static onApplicationPaused = () => {\n    console.log('Calling Native Prop onApplicationPaused()');\n    KalturaPlayerModule.onApplicationPaused();\n  };\n\n  /**\n   * Should be called when the application comes back to\n   * foreground\n   */\n  static onApplicationResumed = () => {\n    console.log('Calling Native Prop onApplicationResumed()');\n    KalturaPlayerModule.onApplicationResumed();\n  };\n\n  /**\n   * Update a Plugin Config\n   *\n   * @param pluginName Plugin Name (Youbora, IMA etc)\n   * @param config Updated Plugin Config (YouboraConfig JSON, IMAConfig JSON etc)\n   */\n  static updatePluginConfig = (pluginName: PLAYER_PLUGIN, config: object) => {\n    if (pluginName == null || !config) {\n      console.error(\n        `updatePluginConfig, either pluginName ${pluginName} OR config is invalid: ${config}`\n      );\n      return;\n    }\n\n    const pluginJson = {\n      pluginName: pluginName,\n      pluginConfig: config,\n    };\n    const stringifiedJson = JSON.stringify(pluginJson);\n    console.log(`Updated Plugin is: ${stringifiedJson}`);\n\n    KalturaPlayerModule.updatePluginConfigs(stringifiedJson);\n  };\n\n  /**\n   * Play the player if it is not playing\n   */\n  static play = () => {\n    console.log('Calling Native Prop play()');\n    KalturaPlayerModule.play();\n  };\n\n  /**\n   * Pause the player if it is playing\n   */\n  static pause = () => {\n    console.log('Calling Native Prop pause()');\n    KalturaPlayerModule.pause();\n  };\n\n  /**\n   * Stops the player to the initial state\n   */\n  static stop = () => {\n    console.log('Calling Native Prop stop()');\n    KalturaPlayerModule.stop();\n  };\n\n  /**\n   * Destroy the Kaltura Player instance\n   */\n  static destroy = () => {\n    console.log('Calling Native Prop destroy()');\n    KalturaPlayerModule.destroy();\n  };\n\n  /**\n   * Replays the media from the beginning\n   */\n  static replay = () => {\n    console.log('Calling Native Prop replay()');\n    KalturaPlayerModule.replay();\n  };\n\n  /**\n   * Seek the player to the specified position\n   * @param position in miliseconds (Ms)\n   */\n  static seekTo = (position: number) => {\n    console.log(`Calling Native Prop seekTo() position is: ${position}`);\n    KalturaPlayerModule.seekTo(position);\n  };\n\n  /**\n   * Change a specific track (Video, Audio or Text track)\n   * @param trackId Unique track ID which was sent in `tracksAvailable` event\n   */\n  static changeTrack = (trackId: string) => {\n    if (!trackId) {\n      console.error(`trackId is invalid which is: ${trackId}`);\n      return;\n    }\n    console.log('Calling Native Prop changeTrack()');\n    KalturaPlayerModule.changeTrack(trackId);\n  };\n\n  /**\n   * Change the playback rate (ff or slow motion). Default is 1.0f\n   * @param rate Desired playback rate (Ex: 0.5f, 1.5f 2.0f etc)\n   */\n  static setPlaybackRate = (rate: number) => {\n    console.log(`Calling Native Prop setPlaybackRate() rate is: ${rate}`);\n    KalturaPlayerModule.changePlaybackRate(rate);\n  };\n\n  /**\n   * Change the volume of the current audio track.\n   * Accept values between 0.0 and 1.0. Where 0.0 is mute and 1.0 is maximum volume.\n   * If the volume parameter is higher then 1.0, it will be converted to 1.0.\n   * If the volume parameter is lower then 0.0, it be converted to 0.0.\n   *\n   * @param vol - volume to set.\n   */\n  static setVolume = (vol: number) => {\n    console.log('Calling Native Prop setVolume()');\n    KalturaPlayerModule.setVolume(vol);\n  };\n\n  /**\n   * Set the media to play automatically at the start (load)\n   * if false, user will have to click on UI play button\n   *\n   * @param isAutoPlay media should be autoplayed at the start or not\n   */\n  static setAutoPlay = (isAutoPlay: boolean) => {\n    console.log('Calling Native Prop setAutoPlay()');\n    KalturaPlayerModule.setAutoplay(isAutoPlay);\n  };\n\n  /**\n   * Set the KS for the media (only for OVP/OTT users)\n   * Call this before calling {@link loadMedia}\n   * @param KS Kaltura Secret key\n   */\n  static setKS = (KS: string) => {\n    if (!KS) {\n      console.error('KS is invalid which is: ' + KS);\n      return;\n    }\n    console.log('Calling Native Prop setKS()');\n    KalturaPlayerModule.setKS(KS);\n  };\n\n  /**\n   * NOOP\n   * @param index\n   */\n  //static setZIndex = (index: number) => {\n  //  console.log('Calling Native Prop setZIndex()');\n  //};\n\n  /**\n   * Only for Live Media.\n   * Seek player to Live Default Position.\n   */\n  static seekToLiveDefaultPosition = () => {\n    console.log('Calling Native Prop seekToLiveDefaultPosition()');\n    KalturaPlayerModule.seekToLiveDefaultPosition();\n  };\n\n  /**\n   * Update the existing subtitle styling\n   */\n  static updateSubtitleStyle = (subtitleStyle: string) => {\n    if (!subtitleStyle) {\n      console.error(`subtitleStyle is invalid which is: ${subtitleStyle}`);\n      return;\n    }\n    console.log('Calling Native Prop updateSubtitleStyle()');\n    KalturaPlayerModule.updateSubtitleStyle(subtitleStyle);\n  };\n\n  /**\n   * Update the Resize Mode\n   */\n  static updateResizeMode = (mode: PLAYER_RESIZE_MODES) => {\n    console.log('Calling Native Prop updateSurfaceAspectRatioResizeMode()');\n    KalturaPlayerModule.updateResizeMode(mode);\n  };\n\n  /**\n   * Update the ABR Settings\n   */\n  static updateAbrSettings = (abrSettings: string) => {\n    if (!abrSettings) {\n      console.error(`abrSettings is invalid which is: ${abrSettings}`);\n      return;\n    }\n    console.log('Calling Native Prop updateABRSettings()');\n    KalturaPlayerModule.updateAbrSettings(abrSettings);\n  };\n\n  /**\n   * Reset the ABR Settings\n   */\n  static resetAbrSettings = () => {\n    console.log('Calling Native Prop resetABRSettings()');\n    KalturaPlayerModule.resetAbrSettings();\n  };\n\n  /**\n   * Update the Low Latency Config\n   * Only for Live Media\n   */\n  static updateLowLatencyConfig = (lowLatencyConfig: string) => {\n    if (!lowLatencyConfig) {\n      console.error(\n        `lowLatencyConfig is invalid which is: ${lowLatencyConfig}`\n      );\n      return;\n    }\n    console.log('Calling Native Prop updateLowLatencyConfig()');\n    KalturaPlayerModule.updateLlConfig(lowLatencyConfig);\n  };\n\n  /**\n   * Reset the Low Latency Config\n   * Only for Live Media\n   */\n  static resetLowLatencyConfig = () => {\n    console.log('Calling Native Prop resetLowLatencyConfig()');\n    KalturaPlayerModule.resetLlConfig();\n  };\n\n  /**\n   * Getter for the current playback position.\n   * @returns string: Position of the player or {@link POSITION_UNSET}\n   */\n  static getCurrentPosition = async () => {\n    console.log('Calling Native Prop getCurrentPosition()');\n    return await getCurrentPosition();\n  };\n\n  /**\n   * Checks if Player is currently playing or not\n   * @returns boolean\n   */\n  static isPlaying = async () => {\n    console.log('Calling Native Prop isPlaying');\n    return await isPlaying();\n  };\n\n  /**\n   * Checks if the stream is Live or Not\n   * @returns boolean\n   */\n  static isLive = async () => {\n    console.log('Calling Native Prop isLive');\n    return await isLive();\n  };\n}\n\nasync function setupKalturaPlayer(playerType: PLAYER_TYPE, options: string, id: number) {\n  try {\n    const kalturaPlayerSetup = await KalturaPlayerModule.setUpPlayer(\n      playerType,\n      id,\n      options\n    );\n    console.log(`Player is created: ${kalturaPlayerSetup}`);\n    return kalturaPlayerSetup;\n  } catch (e) {\n    console.error(`Exception: ${e}`);\n    return false;\n  }\n}\n\nasync function getCurrentPosition() {\n  try {\n    const currentPosition = await KalturaPlayerModule.getCurrentPosition();\n    console.log(`Current Position: ${currentPosition}`);\n    return currentPosition;\n  } catch (e) {\n    console.error(`Exception: ${e}`);\n    return POSITION_UNSET;\n  }\n}\n\nasync function isPlaying() {\n  try {\n    const isPlayerPlaying = await KalturaPlayerModule.isPlaying();\n    console.log(`isPlayerPlaying ${isPlayerPlaying}`);\n    return isPlayerPlaying;\n  } catch (e) {\n    console.error(`Exception: ${e}`);\n    return false;\n  }\n}\n\nasync function isLive() {\n  try {\n    const isPlayerLive = await KalturaPlayerModule.isLive();\n    console.log(`isPlayerLive ${isPlayerLive}`);\n    return isPlayerLive;\n  } catch (e) {\n    console.error(`Exception: ${e}`);\n    return false;\n  }\n}\n"],"mappings":"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"}