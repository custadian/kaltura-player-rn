{"version":3,"sources":["index.tsx"],"names":["requireNativeComponent","NativeModules","NativeEventEmitter","React","PropTypes","KalturaPlayerModule","KalturaPlayerViewManager","KalturaPlayerEvents","KalturaPlayerEmitter","RNKalturaPlayer","console","log","KalturaPlayer","Component","componentDidMount","eventListener","addListener","event","componentWillUnmount","remove","render","props","nativeRef","nativeComponentRef","propTypes","style","object","KalturaPlayerAPI","partnerId","options","setup","assetId","load","destroy","volume","setVolume","position","seekTo","isVisible","setPlayerVisibility","play","replay","pause","stop","value","setAutoplay"],"mappings":";;;;AAAA,SACEA,sBADF,EAEEC,aAFF,EAIEC,kBAJF,QAKO,cALP;AAMA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,MAAMC,mBAAmB,GAAGJ,aAAa,CAACK,wBAA1C;AACP,MAAMC,mBAAmB,GAAGN,aAAa,CAACM,mBAA1C;AACA,OAAO,MAAMC,oBAAoB,GAAG,IAAIN,kBAAJ,CAAuBK,mBAAvB,CAA7B;AAEP,MAAME,eAAe,GAAGT,sBAAsB,CAAC,mBAAD,CAA9C;AAEAU,OAAO,CAACC,GAAR,CAAYJ,mBAAZ;AAKA,OAAO,MAAMK,aAAN,SAA4BT,KAAK,CAACU,SAAlC,CAAgE;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAIrEC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,aAAL,GAAqBP,oBAAoB,CAACQ,WAArB,CAAiC,SAAjC,EAA6CC,KAAD,IAAgB;AAC/EP,MAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACD,KAFoB,CAArB;AAGD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrB,SAAKH,aAAL,CAAmBI,MAAnB,GADqB,CACQ;AAC9B;;AAMDC,EAAAA,MAAM,GAAG;AACP,wBAAO,oBAAC,eAAD,eAAqB,KAAKC,KAA1B;AAAiC,MAAA,GAAG,EAAGC,SAAD,IAAe,KAAKC,kBAAL,GAA0BD;AAA/E,OAAP;AACD;;AApBoE;;gBAA1DV,a;;AAuBbA,aAAa,CAACY,SAAd,GAA0B;AACxBC,EAAAA,KAAK,EAAErB,SAAS,CAACsB;AADO,CAA1B;AAIA,OAAO,MAAMC,gBAAN,CAAuB;;gBAAjBA,gB,WACI,CAACC,SAAD,EAAoBC,OAApB,KAKT;AACJ,SAAOxB,mBAAmB,CAACyB,KAApB,CAA0BF,SAA1B,EAAqCC,OAArC,CAAP;AACD,C;;gBARUF,gB,eASQ,CAACI,OAAD,EAAkBF,OAAlB,KAWb;AACJ,SAAOxB,mBAAmB,CAAC2B,IAApB,CAAyBD,OAAzB,EAAkCF,OAAlC,CAAP;AACD,C;;gBAtBUF,gB,aAuBM,MAAM;AACrB,SAAOtB,mBAAmB,CAAC4B,OAApB,EAAP;AACD,C;;gBAzBUN,gB,eA0BSO,MAAD,IAAoB;AACrC,SAAO7B,mBAAmB,CAAC8B,SAApB,CAA8BD,MAA9B,CAAP;AACD,C;;gBA5BUP,gB,YA6BMS,QAAD,IAAsB;AACpC,SAAO/B,mBAAmB,CAACgC,MAApB,CAA2BD,QAA3B,CAAP;AACD,C;;gBA/BUT,gB,yBAgCmBW,SAAD,IAAwB;AACnD,SAAOjC,mBAAmB,CAACkC,mBAApB,CAAwCD,SAAxC,CAAP;AACD,C;;gBAlCUX,gB,UAmCG,MAAM;AAClB,SAAOtB,mBAAmB,CAACmC,IAApB,EAAP;AACD,C;;gBArCUb,gB,YAsCK,MAAM;AACpB,SAAOtB,mBAAmB,CAACoC,MAApB,EAAP;AACD,C;;gBAxCUd,gB,WAyCI,MAAM;AACnB,SAAOtB,mBAAmB,CAACqC,KAApB,EAAP;AACD,C;;gBA3CUf,gB,UA4CG,MAAM;AAClB,SAAOtB,mBAAmB,CAACsC,IAApB,EAAP;AACD,C;;gBA9CUhB,gB,iBA+CWiB,KAAD,IAAoB;AACvC,SAAOvC,mBAAmB,CAACwC,WAApB,CAAgCD,KAAhC,CAAP;AACD,C","sourcesContent":["import {\n  requireNativeComponent,\n  NativeModules,\n  ViewStyle,\n  NativeEventEmitter,\n} from 'react-native';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const KalturaPlayerModule = NativeModules.KalturaPlayerViewManager;\nconst KalturaPlayerEvents = NativeModules.KalturaPlayerEvents;\nexport const KalturaPlayerEmitter = new NativeEventEmitter(KalturaPlayerEvents);\n\nconst RNKalturaPlayer = requireNativeComponent('KalturaPlayerView');\n\nconsole.log(KalturaPlayerEvents)\ninterface KalturaPlayerProps {\n  style: ViewStyle\n}\n\nexport class KalturaPlayer extends React.Component<KalturaPlayerProps> {\n  nativeComponentRef: any;\n  eventListener: any;\n\n  componentDidMount() {\n    this.eventListener = KalturaPlayerEmitter.addListener('playing', (event: any) => {\n      console.log(event)\n    });\n  }\n\n  componentWillUnmount() {\n    this.eventListener.remove(); //Removes the listener\n  }\n\n  static propTypes: {\n    style: object;\n  };\n\n  render() {\n    return <RNKalturaPlayer {...this.props} ref={(nativeRef) => this.nativeComponentRef = nativeRef} />;\n  }\n}\n\nKalturaPlayer.propTypes = {\n  style: PropTypes.object\n};\n\nexport class KalturaPlayerAPI {\n  static setup = (partnerId: number, options: {\n    preload: boolean\n    autoplay: boolean\n    serverUrl: string\n    ks?: string\n  }) => {\n    return KalturaPlayerModule.setup(partnerId, options)\n  }\n  static loadMedia = (assetId: string, options: {\n    autoplay: boolean\n    assetType: \"media\" | \"recording\" | \"epg\"\n    protocol: \"http\" | \"https\"\n    playbackContextType?: \"playback\" | \"catchup\" | \"trailer\" | \"startOver\"\n    assetReferenceType?: \"media\" | \"epgInternal\" | \"epgExternal\" | \"npvr\"\n    urlType?: string\n    format?: string[]\n    fileId?: string[]\n    streamerType?: string\n    startPosition?: number\n  }) => {\n    return KalturaPlayerModule.load(assetId, options);\n  }\n  static destroy = () => {\n    return KalturaPlayerModule.destroy();\n  }\n  static setVolume = (volume: number) => {\n    return KalturaPlayerModule.setVolume(volume);\n  }\n  static seekTo = (position: number) => {\n    return KalturaPlayerModule.seekTo(position);\n  }\n  static setPlayerVisibility = (isVisible: boolean) => {\n    return KalturaPlayerModule.setPlayerVisibility(isVisible);\n  }\n  static play = () => {\n    return KalturaPlayerModule.play();\n  }\n  static replay = () => {\n    return KalturaPlayerModule.replay();\n  }\n  static pause = () => {\n    return KalturaPlayerModule.pause();\n  }\n  static stop = () => {\n    return KalturaPlayerModule.stop();\n  }\n  static setAutoplay = (value: boolean) => {\n    return KalturaPlayerModule.setAutoplay(value);\n  }\n}\n"]}