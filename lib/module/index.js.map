{"version":3,"sources":["index.tsx"],"names":["requireNativeComponent","NativeModules","NativeEventEmitter","React","PropTypes","KalturaPlayerModule","KalturaPlayerViewManager","KalturaPlayerEvents","KalturaPlayerEmitter","RNKalturaPlayer","KalturaPlayer","Component","componentDidMount","supportedEvents","forEach","type","eventListeners","push","addListener","event","emit","componentWillUnmount","remove","render","props","nativeRef","nativeComponentRef","propTypes","style","object","KalturaPlayerAPI","partnerId","options","setup","assetId","load","destroy","volume","setVolume","position","seekTo","isVisible","setPlayerVisibility","play","replay","pause","stop","value","setAutoplay"],"mappings":"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","sourcesContent":["import {\n  requireNativeComponent,\n  NativeModules,\n  ViewStyle,\n  NativeEventEmitter,\n} from 'react-native';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const KalturaPlayerModule = NativeModules.KalturaPlayerViewManager;\nconst KalturaPlayerEvents = NativeModules.KalturaPlayerEvents;\nexport const KalturaPlayerEmitter = new NativeEventEmitter(KalturaPlayerEvents);\n\nconst RNKalturaPlayer = requireNativeComponent('KalturaPlayerView');\n\ninterface KalturaPlayerProps {\n  style: ViewStyle\n}\n\nexport class KalturaPlayer extends React.Component<KalturaPlayerProps> {\n  nativeComponentRef: any;\n  eventListeners: any[] = [];\n\n  componentDidMount() {\n    const supportedEvents = [\n      \"canPlay\", \"durationChanged\", \"stopped\", \"ended\", \"loadedMetadata\", \"play\", \"pause\", \"playing\", \"seeking\", \"seeked\", \"replay\",\n      \"tracksAvailable\", \"textTrackChanged\", \"audioTrackChanged\", \"videoTrackChanged\", \"playbackInfo\", \"stateChanged\",\n      \"timedMetadata\", \"sourceSelected\", \"loadedTimeRanges\", \"playheadUpdate\", \"error\", \"errorLog\", \"playbackStalled\", \"playbackRate\"\n    ];\n    supportedEvents.forEach(type => {\n      this.eventListeners.push(KalturaPlayerEmitter.addListener(type, (event: any) => {\n        KalturaPlayerEmitter.emit('KPlayerEvent', { type, ...event })\n      }));\n    })\n  }\n\n  componentWillUnmount() {\n    this.eventListeners.forEach(event => event.remove());\n  }\n\n  static propTypes: {\n    style: object;\n  };\n\n  render() {\n    return <RNKalturaPlayer {...this.props} ref={(nativeRef) => this.nativeComponentRef = nativeRef} />;\n  }\n}\n\nKalturaPlayer.propTypes = {\n  style: PropTypes.object\n};\n\nexport class KalturaPlayerAPI {\n  static setup = (partnerId: number, options: {\n    preload: boolean\n    autoplay: boolean\n    serverUrl: string\n    ks?: string\n  }) => {\n    return KalturaPlayerModule.setup(partnerId, options)\n  }\n  static load = (assetId: string, options: {\n    autoplay: boolean\n    assetType: \"media\" | \"recording\" | \"epg\"\n    protocol: \"http\" | \"https\"\n    playbackContextType?: \"playback\" | \"catchup\" | \"trailer\" | \"startOver\"\n    assetReferenceType?: \"media\" | \"epgInternal\" | \"epgExternal\" | \"npvr\"\n    urlType?: string\n    format?: string[]\n    fileId?: string[]\n    streamerType?: string\n    startPosition?: number\n  }) => {\n    return KalturaPlayerModule.load(assetId, options);\n  }\n  static destroy = () => {\n    return KalturaPlayerModule.destroy();\n  }\n  static setVolume = (volume: number) => {\n    return KalturaPlayerModule.setVolume(volume);\n  }\n  static seekTo = (position: number) => {\n    return KalturaPlayerModule.seekTo(position);\n  }\n  static setPlayerVisibility = (isVisible: boolean) => {\n    return KalturaPlayerModule.setPlayerVisibility(isVisible);\n  }\n  static play = () => {\n    return KalturaPlayerModule.play();\n  }\n  static replay = () => {\n    return KalturaPlayerModule.replay();\n  }\n  static pause = () => {\n    return KalturaPlayerModule.pause();\n  }\n  static stop = () => {\n    return KalturaPlayerModule.stop();\n  }\n  static setAutoplay = (value: boolean) => {\n    return KalturaPlayerModule.setAutoplay(value);\n  }\n}\n"]}