{"version":3,"names":["requireNativeComponent","NativeModules","React","PropTypes","PlayerEvents","AdEvents","AnalyticsEvents","PLAYER_TYPE","MEDIA_FORMAT","MEDIA_ENTRY_TYPE","DRM_SCHEME","PLAYER_PLUGIN","PLAYER_RESIZE_MODES","WAKEMODE","SUBTITLE_STYLE","SUBTITLE_PREFERENCE","VIDEO_CODEC","AUDIO_CODEC","VR_INTERACTION_MODE","RNKalturaPlayer","KalturaPlayerModule","POSITION_UNSET","debugLogs","KalturaPlayer","Component","componentDidMount","printConsoleLog","componentWillUnmount","render","props","nativeRef","nativeComponentRef","propTypes","style","object","KalturaPlayerAPI","playerType","options","id","LogType","ERROR","setupKalturaPlayer","asset","loadMediaKalturaPlayer","addPlayerView","removePlayerView","addKalturaPlayerListeners","removeKalturaPlayerListeners","onApplicationPaused","onApplicationResumed","configs","stringifiedJson","JSON","stringify","updatePluginConfigs","play","pause","stop","destroy","replay","position","seekTo","trackId","changeTrack","rate","changePlaybackRate","vol","setVolume","isAutoPlay","setAutoplay","KS","setKS","seekToLiveDefaultPosition","subtitleStyle","updateSubtitleStyle","mode","updateResizeMode","abrSettings","updateAbrSettings","resetAbrSettings","lowLatencyConfig","updateLLConfig","resetLLConfig","getCurrentPosition","isPlaying","isLive","positionMs","getThumbnailInfo","enabled","kalturaPlayerSetup","setUpPlayer","exception","loadMedia","load","currentPosition","isPlayerPlaying","isPlayerLive","thumbnailInfo","requestThumbnailInfo","message","logType","LOG","console","log","WARN","warn","error"],"sources":["index.tsx"],"sourcesContent":["import { requireNativeComponent, NativeModules, ViewStyle } from 'react-native';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { PlayerEvents } from './events/PlayerEvents';\nimport { AdEvents } from './events/AdEvents';\nimport { AnalyticsEvents } from './events/AnalyticsEvents';\nimport {\n  PLAYER_TYPE,\n  MEDIA_FORMAT,\n  MEDIA_ENTRY_TYPE,\n  DRM_SCHEME,\n  PLAYER_PLUGIN,\n  PLAYER_RESIZE_MODES,\n  WAKEMODE,\n  SUBTITLE_STYLE,\n  SUBTITLE_PREFERENCE,\n  VIDEO_CODEC,\n  AUDIO_CODEC,\n  VR_INTERACTION_MODE,\n} from './consts';\n\nexport {\n  PlayerEvents,\n  AdEvents,\n  AnalyticsEvents,\n  PLAYER_TYPE,\n  MEDIA_FORMAT,\n  MEDIA_ENTRY_TYPE,\n  DRM_SCHEME,\n  PLAYER_PLUGIN,\n  PLAYER_RESIZE_MODES,\n  WAKEMODE,\n  SUBTITLE_STYLE,\n  SUBTITLE_PREFERENCE,\n  VIDEO_CODEC,\n  AUDIO_CODEC,\n  VR_INTERACTION_MODE,\n};\n\nconst RNKalturaPlayer = requireNativeComponent('KalturaPlayerView');\nconst { KalturaPlayerModule } = NativeModules;\n\nconst POSITION_UNSET: number = -1;\nvar debugLogs = false;\n\ninterface KalturaPlayerProps {\n  style: ViewStyle;\n}\n\nexport class KalturaPlayer extends React.Component<KalturaPlayerProps> {\n  nativeComponentRef: any;\n\n  static propTypes: {\n    style: object;\n  };\n\n  componentDidMount() {\n    printConsoleLog('componentDidMount from Library.');\n  }\n\n  componentWillUnmount() {\n    printConsoleLog('componentWillUnmount from Library');\n  }\n\n  render() {\n    return (\n      <RNKalturaPlayer\n        {...this.props}\n        ref={(nativeRef) => (this.nativeComponentRef = nativeRef)}\n      />\n    );\n  }\n}\n\nKalturaPlayer.propTypes = {\n  style: PropTypes.object,\n};\n\nexport class KalturaPlayerAPI {\n  /**\n   * This method creates a Player instance internally (Basic, OVP/OTT Player)\n   * With this, it take the PlayerInitOptions which are having essential Player settings values\n   *\n   * @param playerType The Player Type, Basic/OVP/OTT.\n   * @param options PlayerInitOptions JSON String.\n   * @param id PartnerId (Don't pass this parameter for BasicPlayer. For OVP/OTT player this value\n   * should be always greater than 0 and should be valid otherwise, we will not be able to featch the details\n   * for the mediaId or the entryId)\n   */\n  static setup = async (\n    playerType: PLAYER_TYPE,\n    options: string,\n    id: number = 0\n  ) => {\n    if (playerType == null) {\n      printConsoleLog(`Invalid playerType = ${playerType}`, LogType.ERROR);\n      return;\n    }\n\n    if (!options) {\n      printConsoleLog(`setup, invalid options = ${options}`, LogType.ERROR);\n      return;\n    }\n    printConsoleLog('Setting up the Player');\n    return await setupKalturaPlayer(playerType, options, id);\n  };\n\n  /**\n   * Load the media with the given\n   *\n   * assetId OR mediaId OR entryID for OVP/OTT Kaltura Player\n   *\n   * playbackURL for Basic Kaltura Player\n   *\n   * @param id Playback URL for Kaltura Basic Player OR\n   * MediaId for Kaltura OTT Player OR\n   * EntryId for Kaltura OVP Player\n   * @param asset Media Asset JSON String\n   */\n  static loadMedia = async (id: string, asset: string) => {\n    if (!id || !asset) {\n      printConsoleLog(\n        `loadMedia, invalid id = ${id} or asset = ${asset}`,\n        LogType.ERROR\n      );\n      return;\n    }\n\n    printConsoleLog(\n      `Loading the media. assetId is: ${id} and media asset is: ${asset}`\n    );\n\n    return await loadMediaKalturaPlayer(id, asset);\n  };\n\n  /**\n   * Adds the Native Player View to the Player if not attached\n   * Ideally this API should be called after calling {@link removePlayerView}\n   */\n  static addPlayerView = () => {\n    printConsoleLog('Calling Native method addPlayerView()');\n    KalturaPlayerModule.addPlayerView();\n  };\n\n  /**\n   * Removes the Native Player View from the Player if it is attached\n   * Ideally this API should be called after calling {@link addPlayerView}\n   */\n  static removePlayerView = () => {\n    printConsoleLog('Calling Native method removePlayerView()');\n    KalturaPlayerModule.removePlayerView();\n  };\n\n  /**\n   * Add the listners for the Kaltura Player\n   */\n  static addListeners = () => {\n    printConsoleLog('Calling Native method addListeners()');\n    KalturaPlayerModule.addKalturaPlayerListeners();\n  };\n\n  /**\n   * Add the listners for the Kaltura Player\n   */\n  static removeListeners = () => {\n    printConsoleLog('Calling Native method removeListeners()');\n    KalturaPlayerModule.removeKalturaPlayerListeners();\n  };\n\n  /**\n   * Should be called when the application is in background\n   */\n  static onApplicationPaused = () => {\n    printConsoleLog('Calling Native method onApplicationPaused()');\n    KalturaPlayerModule.onApplicationPaused();\n  };\n\n  /**\n   * Should be called when the application comes back to\n   * foreground\n   */\n  static onApplicationResumed = () => {\n    printConsoleLog('Calling Native method onApplicationResumed()');\n    KalturaPlayerModule.onApplicationResumed();\n  };\n\n  /**\n   * Update Plugin Configs\n   *\n   * @param configs Updated Plugin Configs (YouboraConfig JSON, IMAConfig JSON etc)\n   */\n  static updatePluginConfigs = (configs: object) => {\n    if (!configs) {\n      printConsoleLog(\n        `updatePluginConfig, config is invalid: ${configs}`,\n        LogType.ERROR\n      );\n      return;\n    }\n\n    const stringifiedJson = JSON.stringify(configs);\n    printConsoleLog(`Updated Plugin is: ${stringifiedJson}`);\n\n    KalturaPlayerModule.updatePluginConfigs(stringifiedJson);\n  };\n\n  /**\n   * Play the player if it is not playing\n   */\n  static play = () => {\n    printConsoleLog('Calling Native method play()');\n    KalturaPlayerModule.play();\n  };\n\n  /**\n   * Pause the player if it is playing\n   */\n  static pause = () => {\n    printConsoleLog('Calling Native method pause()');\n    KalturaPlayerModule.pause();\n  };\n\n  /**\n   * Stops the player to the initial state\n   */\n  static stop = () => {\n    printConsoleLog('Calling Native method stop()');\n    KalturaPlayerModule.stop();\n  };\n\n  /**\n   * Destroy the Kaltura Player instance\n   */\n  static destroy = () => {\n    printConsoleLog('Calling Native method destroy()');\n    KalturaPlayerModule.destroy();\n  };\n\n  /**\n   * Replays the media from the beginning\n   */\n  static replay = () => {\n    printConsoleLog('Calling Native method replay()');\n    KalturaPlayerModule.replay();\n  };\n\n  /**\n   * Seek the player to the specified position\n   * @param position in miliseconds (Ms)\n   */\n  static seekTo = (position: number) => {\n    printConsoleLog(`Calling Native method seekTo() position is: ${position}`);\n    KalturaPlayerModule.seekTo(position);\n  };\n\n  /**\n   * Change a specific track (Video, Audio or Text track)\n   * @param trackId Unique track ID which was sent in `tracksAvailable` event\n   */\n  static changeTrack = (trackId: string) => {\n    if (!trackId) {\n      printConsoleLog(`trackId is invalid which is: ${trackId}`, LogType.ERROR);\n      return;\n    }\n    printConsoleLog('Calling Native method changeTrack()');\n    KalturaPlayerModule.changeTrack(trackId);\n  };\n\n  /**\n   * Change the playback rate (ff or slow motion). Default is 1.0f\n   * @param rate Desired playback rate (Ex: 0.5f, 1.5f 2.0f etc)\n   */\n  static setPlaybackRate = (rate: number) => {\n    printConsoleLog(`Calling Native method setPlaybackRate() rate is: ${rate}`);\n    KalturaPlayerModule.changePlaybackRate(rate);\n  };\n\n  /**\n   * Change the volume of the current audio track.\n   * Accept values between 0.0 and 1.0. Where 0.0 is mute and 1.0 is maximum volume.\n   * If the volume parameter is higher then 1.0, it will be converted to 1.0.\n   * If the volume parameter is lower then 0.0, it be converted to 0.0.\n   *\n   * @param vol - volume to set.\n   */\n  static setVolume = (vol: number) => {\n    printConsoleLog('Calling Native method setVolume()');\n    KalturaPlayerModule.setVolume(vol);\n  };\n\n  /**\n   * Set the media to play automatically at the start (load)\n   * if `false`, user will have to click on UI play button\n   *\n   * @param isAutoPlay media should be autoplayed at the start or not\n   */\n  static setAutoPlay = (isAutoPlay: boolean) => {\n    printConsoleLog('Calling Native method setAutoPlay()');\n    KalturaPlayerModule.setAutoplay(isAutoPlay);\n  };\n\n  /**\n   * Set the KS for the media (only for OVP/OTT users)\n   * Call this before calling {@link loadMedia}\n   * @param KS Kaltura Secret key\n   */\n  static setKS = (KS: string) => {\n    if (!KS) {\n      printConsoleLog('KS is invalid which is: ' + KS, LogType.ERROR);\n      return;\n    }\n    printConsoleLog('Calling Native method setKS()');\n    KalturaPlayerModule.setKS(KS);\n  };\n\n  /**\n   * NOOP\n   * @param index\n   */\n  //static setZIndex = (index: number) => {\n  //  printConsoleLog('Calling Native method setZIndex()');\n  //};\n\n  /**\n   * Only for Live Media.\n   * Seek player to Live Default Position.\n   */\n  static seekToLiveDefaultPosition = () => {\n    printConsoleLog('Calling Native method seekToLiveDefaultPosition()');\n    KalturaPlayerModule.seekToLiveDefaultPosition();\n  };\n\n  /**\n   * Update the existing subtitle styling\n   */\n  static updateSubtitleStyle = (subtitleStyle: string) => {\n    if (!subtitleStyle) {\n      printConsoleLog(\n        `subtitleStyle is invalid which is: ${subtitleStyle}`,\n        LogType.ERROR\n      );\n      return;\n    }\n    printConsoleLog('Calling Native method updateSubtitleStyle()');\n    KalturaPlayerModule.updateSubtitleStyle(subtitleStyle);\n  };\n\n  /**\n   * Update the Resize Mode\n   */\n  static updateResizeMode = (mode: PLAYER_RESIZE_MODES) => {\n    printConsoleLog('Calling Native method updateSurfaceAspectRatioResizeMode()');\n    KalturaPlayerModule.updateResizeMode(mode);\n  };\n\n  /**\n   * Update the ABR Settings\n   */\n  static updateAbrSettings = (abrSettings: string) => {\n    if (!abrSettings) {\n      printConsoleLog(\n        `abrSettings is invalid which is: ${abrSettings}`,\n        LogType.ERROR\n      );\n      return;\n    }\n    printConsoleLog('Calling Native method updateABRSettings()');\n    KalturaPlayerModule.updateAbrSettings(abrSettings);\n  };\n\n  /**\n   * Reset the ABR Settings\n   */\n  static resetAbrSettings = () => {\n    printConsoleLog('Calling Native method resetABRSettings()');\n    KalturaPlayerModule.resetAbrSettings();\n  };\n\n  /**\n   * Update the Low Latency Config\n   * Only for Live Media\n   */\n  static updateLowLatencyConfig = (lowLatencyConfig: string) => {\n    if (!lowLatencyConfig) {\n      printConsoleLog(\n        `lowLatencyConfig is invalid which is: ${lowLatencyConfig}`,\n        LogType.ERROR\n      );\n      return;\n    }\n    printConsoleLog('Calling Native method updateLowLatencyConfig()');\n    KalturaPlayerModule.updateLLConfig(lowLatencyConfig);\n  };\n\n  /**\n   * Reset the Low Latency Config\n   * Only for Live Media\n   */\n  static resetLowLatencyConfig = () => {\n    printConsoleLog('Calling Native method resetLowLatencyConfig()');\n    KalturaPlayerModule.resetLLConfig();\n  };\n\n  /**\n   * Get the current playback position for Content and Ad\n   * @returns number: Position of the player or {@link POSITION_UNSET}\n   */\n  static getCurrentPosition = async () => {\n    printConsoleLog('Calling Native method getCurrentPosition()');\n    return await getCurrentPosition();\n  };\n\n  /**\n   * Checks if Player is currently playing or not\n   * @returns boolean\n   */\n  static isPlaying = async () => {\n    printConsoleLog('Calling Native method isPlaying');\n    return await isPlaying();\n  };\n\n  /**\n   * Checks if the stream is Live or Not\n   * @returns boolean\n   */\n  static isLive = async () => {\n    printConsoleLog('Calling Native method isLive');\n    return await isLive();\n  };\n\n  /**\n   * Get the Information for a thumbnail image by position.\n   *\n   * @param positionMs - relevant image for given player position.\n   * @returns ThumbnailInfo JSON object\n   */\n   static requestThumbnailInfo = async (positionMs: number) => {\n    printConsoleLog('requestThumbnailInfo');\n    if (positionMs < 0) {\n      printConsoleLog(`Invalid positionMs = ${positionMs}`, LogType.ERROR);\n      return;\n    }\n    return await getThumbnailInfo(positionMs);\n  };\n\n  /**\n   * Enable the console logs for the JS bridge\n   * By default it is disabled.\n   * @param enabled enable the debug logs\n   * @returns if `enabled` is `null` then don't do anything\n   */\n  static enableDebugLogs = (enabled: boolean) => {\n    if (enabled == null) {\n      return;\n    }\n    debugLogs = enabled;\n  };\n}\n\nasync function setupKalturaPlayer(\n  playerType: PLAYER_TYPE,\n  options: string,\n  id: number\n) {\n  try {\n    const kalturaPlayerSetup = await KalturaPlayerModule.setUpPlayer(\n      playerType,\n      id,\n      options\n    );\n    printConsoleLog(`Player is created: ${kalturaPlayerSetup}`);\n    return kalturaPlayerSetup;\n  } catch (exception) {\n    printConsoleLog(\n      `setupKalturaPlayer Exception: ${exception}`,\n      LogType.ERROR\n    );\n    return exception;\n  }\n}\n\nasync function loadMediaKalturaPlayer(id: string, asset: string) {\n  try {\n    const loadMedia = await KalturaPlayerModule.load(id, asset);\n    printConsoleLog(`Media Loaded ${loadMedia}`);\n    return loadMedia;\n  } catch (exception) {\n    printConsoleLog(\n      `loadMediaKalturaPlayer Exception: ${exception}`,\n      LogType.ERROR\n    );\n    return exception;\n  }\n}\n\nasync function getCurrentPosition() {\n  try {\n    const currentPosition = await KalturaPlayerModule.getCurrentPosition();\n    printConsoleLog(`Current Position: ${currentPosition}`);\n    return currentPosition;\n  } catch (exception) {\n    printConsoleLog(`Exception: ${exception}`, LogType.ERROR);\n    return POSITION_UNSET;\n  }\n}\n\nasync function isPlaying() {\n  try {\n    const isPlayerPlaying = await KalturaPlayerModule.isPlaying();\n    printConsoleLog(`isPlayerPlaying ${isPlayerPlaying}`);\n    return isPlayerPlaying;\n  } catch (exception) {\n    printConsoleLog(`Exception: ${exception}`, LogType.ERROR);\n    return false;\n  }\n}\n\nasync function isLive() {\n  try {\n    const isPlayerLive = await KalturaPlayerModule.isLive();\n    printConsoleLog(`isPlayerLive ${isPlayerLive}`);\n    return isPlayerLive;\n  } catch (exception) {\n    printConsoleLog(`Exception: ${exception}`, LogType.ERROR);\n    return false;\n  }\n}\n\nasync function getThumbnailInfo(position: number) {\n  try {\n    const thumbnailInfo = await KalturaPlayerModule.requestThumbnailInfo(position);\n    printConsoleLog(`getThumbnailInfo ${JSON.stringify(thumbnailInfo)}`);\n    return thumbnailInfo;\n  } catch (exception) {\n    printConsoleLog(`Exception: ${exception}`, LogType.ERROR);\n    return exception;\n  }\n}\n\nfunction printConsoleLog(message: String, logType: LogType = LogType.LOG) {\n  if (debugLogs) {\n    switch (logType) {\n      case LogType.LOG: {\n        console.log(message);\n        break;\n      }\n      case LogType.WARN: {\n        console.warn(message);\n        break;\n      }\n      case LogType.ERROR: {\n        console.error(message);\n        break;\n      }\n      default: {\n        console.log(message);\n      }\n    }\n  }\n}\n\nenum LogType {\n  LOG,\n  WARN,\n  ERROR,\n}\n"],"mappings":"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"}